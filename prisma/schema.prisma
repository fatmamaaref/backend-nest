generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(uuid())
  email           String      @unique
  password        String?     // JWT
  role            Role        // 'user' ou 'admin'
  full_name       String?
  phone_number   String?     @unique
  profile_picture String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Relations
  plateformes     Plateforme[]  // Un utilisateur peut avoir plusieurs plateformes OAuth2
  businesses      Business[]    // Un utilisateur peut ajouter plusieurs businesses
}


enum Role {
  USER
  ADMIN
}






model Business {
  id          String   @id @default(uuid())
  name        String   
  email       String  
  phone       String?  
  address     String?  
  description String?  
  category    String?  
  locationId  String?  
  pageId      String?  
  createdAt   DateTime @default(now())

  userId      String   // L'utilisateur qui a ajouté ce business

  // Relations
  user                 User                @relation(fields: [userId], references: [id])
  businessPlateformes  BusinessPlateforme[]
}

model Plateforme {
  id          String   @id @default(uuid())
  provider    String  
  oauthId     String   @unique  
  email       String   
  accessToken String   
  refreshToken String? 
  accountId   String?  
  userId      String   

  // Relations
  user                 User                @relation(fields: [userId], references: [id]) 
  businessPlateformes  BusinessPlateforme[]
}

 // Table intermédiaire pour M:N entre Business et Plateforme
model BusinessPlateforme {
  id           String   @id @default(uuid())
  businessId   String
  plateformeId String

  // Relations
  business     Business   @relation(fields: [businessId], references: [id])
  plateforme   Plateforme @relation(fields: [plateformeId], references: [id])

  @@unique([businessId, plateformeId]) // Empêche les doublons
}
